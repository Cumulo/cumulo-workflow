{:package "workflow", :definitions {"comp.topics/style-header" ["def" "style-header" ["{}" [":font-family" "|Josefin Sans"] [":font-size" "16"]]], "comp.home/comp-home" ["def" "comp-home" ["create-comp" ":home" "render"]], "core/on-jsload" ["defn" "on-jsload" [] ["clear-cache!"] ["render-app!"] ["println" "|code updated."]], "core/-main" ["defn" "-main" [] ["enable-console-print!"] ["render-app!"] ["setup-socket!" "store-ref" ["{}" [":url" "|ws://repo:5020"] [":on-close!" ["fn" ["event"] [".error" "js/console" "|Lost connection!"]]]]] ["add-watch" "store-ref" ":changes" "render-app!"] ["add-watch" "states-ref" ":changes" "render-app!"] ["println" "|app started!"] ["let" [["configEl" [".querySelector" "js/document" "|#config"]] ["config" ["read-string" [".-innerHTML" "configEl"]]]] ["if" ["and" ["some?" "navigator.serviceWorker"] [":build?" "config"]] ["->" "navigator.serviceWorker" [".register" "|./sw.js"] [".then" ["fn" ["registration"] ["println" "|resigtered:" "registration.scope"]]] [".catch" ["fn" ["error"] ["println" "|failed:" "error"]]]]]]], "core/store-ref" ["defonce" "store-ref" ["atom" ["{}"]]], "comp.topics/comp-topics" ["def" "comp-topics" ["create-comp" ":topics" "render"]], "comp.container/render" ["defn" "render" ["store"] ["fn" ["state" "mutate!"] ["div" ["{}" [":style" ["merge" "ui/global" "ui/fullscreen" "ui/column"]]] ["div" ["{}" [":style" ["merge" "ui/row-center" "style-header"]]] ["div" ["{}"] ["comp-text" "|Messages" "nil"]] ["div" ["{}" [":style" ["{}" [":cursor" "|pointer"]]] [":event" ["{}"]]] ["comp-text" "|Not logged in" "nil"]]] ["div" ["{}" [":style" "style-body"]] ["comp-home" "store"]] ["comp-debug" "store" ["{}" [":bottom" "0"] [":left" "0"] [":max-width" "|100%"]]]]]], "core/dispatch!" ["defn" "dispatch!" ["op" "op-data"] ["send!" "op" "op-data"]], "network/receiver" ["defonce" "receiver" ["chan"]], "comp.container/style-header" ["def" "style-header" ["{}" [":height" "48"] [":background-color" "colors/motif"] [":justify-content" ":space-between"] [":padding" "|0 16px"] [":font-size" "16"] [":color" ":white"]]], "comp.container/comp-container" ["def" "comp-container" ["create-comp" ":container" "render"]], "comp.login/render" ["defn" "render" ["store"] ["fn" ["state" "mutate!"] ["div" ["{}"] ["div" ["{}" [":style" "style-title"]] ["comp-text" "|Login" "nil"]] ["div" ["{}"] ["div" ["{}"] ["input" ["{}" [":style" "ui/input"]]]] ["div" ["{}"] ["input" ["{}" [":style" "ui/input"]]]]] ["div" ["{}"] ["button" ["{}" [":style" ["merge" "ui/button" ["{}" [":outline" ":none"] [":border" ":none"]]]]] ["comp-text" "|Submit" "nil"]]]]]], "core/states-ref" ["defonce" "states-ref" ["atom" ["{}"]]], "network/sender" ["defonce" "sender" ["chan"]], "comp.container/style-body" ["def" "style-body" ["{}"]], "comp.login/comp-login" ["def" "comp-login" ["create-comp" ":login" "render"]], "comp.home/style-container" ["def" "style-container" ["{}"]], "network/send!" ["defn" "send!" ["op" "op-data"] ["go" [">!" "sender" ["[]" "op" "op-data"]]]], "comp.home/render" ["defn" "render" ["store"] ["fn" ["state" "mutate!"] ["div" ["{}" [":style" ["merge" "ui/row" "style-container"]]] ["comp-topics" "store"] ["comp-login"]]]], "comp.topics/render" ["defn" "render" ["topics"] ["fn" ["state" "mutate!"] ["div" ["{}"] ["div" ["{}" [":style" "style-header"]] ["comp-text" "|Topics" "nil"]]]]], "network/setup-socket!" ["defn" "setup-socket!" ["store-ref" "configs"] ["let" [["ws-url" [":url" "configs"]] ["ws" ["js/WebSocket." "ws-url"]] ["handle-close!" ["if" ["fn?" [":on-close!" "configs"]] [":on-close!" "configs"] "identity"]] ["handle-open!" ["if" ["fn?" [":on-open!" "configs"]] [":on-open!" "configs"] "identity"]]] ["set!" "ws.onopen" ["fn" ["event"] ["handle-open!" "event"]]] ["set!" "ws.onclose" ["fn" ["event"] ["handle-close!" "event"]]] ["set!" "ws.onmessage" ["fn" ["event"] ["let" [["changes" ["reader/read-string" "event.data"]]] ["println" "|Changes" "changes"] ["reset!" "store-ref" ["patch-bunch" "@store-ref" "changes"]]]]] ["go" ["loop" ["[]"] [".send" "ws" ["pr-str" ["<!" "sender"]]] ["recur"]]]]], "comp.login/style-title" ["def" "style-title" ["{}"]], "core/render-app!" ["defn" "render-app!" [] ["let" [["target" [".querySelector" "js/document" "|#app"]]] ["render!" ["comp-container" "@store-ref"] "target" "dispatch!" "states-ref"]]]}, :namespaces {"comp.container" ["ns" "workflow.comp.container" [":require" ["[]" "hsl.core" ":refer" ["[]" "hsl"]] ["[]" "respo-ui.style" ":as" "ui"] ["[]" "respo-ui.style.colors" ":as" "colors"] ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span"]] ["[]" "respo.comp.debug" ":refer" ["[]" "comp-debug"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-code" "comp-text"]] ["[]" "workflow.comp.home" ":refer" ["[]" "comp-home"]]]], "core" ["ns" "workflow.core" [":require" ["[]" "respo.core" ":refer" ["[]" "render!" "clear-cache!"]] ["[]" "workflow.comp.container" ":refer" ["[]" "comp-container"]] ["[]" "cljs.reader" ":refer" ["[]" "read-string"]] ["[]" "workflow.network" ":refer" ["[]" "send!" "setup-socket!"]]]], "network" ["ns" "workflow.network" [":require-macros" ["[]" "cljs.core.async.macros" ":refer" ["[]" "go"]]] [":require" ["[]" "cljs.reader" ":as" "reader"] ["[]" "cljs.core.async" ":as" "a" ":refer" ["[]" ">!" "<!" "chan" "timeout"]] ["[]" "recollect.patch" ":refer" ["[]" "patch-bunch"]]]], "comp.home" ["ns" "workflow.comp.home" [":require" ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]] ["[]" "respo-ui.style" ":as" "ui"] ["[]" "workflow.comp.topics" ":refer" ["[]" "comp-topics"]] ["[]" "workflow.comp.login" ":refer" ["[]" "comp-login"]]]], "comp.topics" ["ns" "workflow.comp.topics" [":require" ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]] ["[]" "respo-ui.style" ":as" "ui"]]], "comp.login" ["ns" "workflow.comp.login" [":require" ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "input" "button"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]] ["[]" "respo-ui.style" ":as" "ui"]]]}, :main-definition nil, :procedures {"style.typeset" [], "style.devtool" [], "comp.container" [], "network" [], "comp.login" [], "comp.topics" [], "comp.home" [], "core" [["set!" "js/window.onload" "-main"]], "style.layout" [], "style.widget" []}}