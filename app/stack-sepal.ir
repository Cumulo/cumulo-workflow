{:definitions {"comp.login/update-state" ["defn" "update-state" ["state" "k" "v"] ["assoc" "state" "k" "v"]], "comp.home/comp-home" ["def" "comp-home" ["create-comp" ":home" "render"]], "core/on-jsload" ["defn" "on-jsload" [] ["clear-cache!"] ["render-app!"] ["println" "|code updated."]], "core/-main" ["defn" "-main" [] ["enable-console-print!"] ["render-app!"] ["setup-socket!" "store-ref" ["{}" [":url" "|ws://tiye.me:5021"] [":on-close!" ["fn" ["event"] [".error" "js/console" "|Lost connection!"]]]]] ["add-watch" "store-ref" ":changes" "render-app!"] ["add-watch" "states-ref" ":changes" "render-app!"] ["println" "|app started!"]], "core/store-ref" ["defonce" "store-ref" ["atom" ["{}"]]], "comp.login/on-toggle" ["defn" "on-toggle" ["mutate!" "signup?"] ["fn" ["e" "dispatch!"] ["mutate!" ":signup?" ["not" "signup?"]]]], "comp.room/on-send" ["defn" "on-send" ["mutate!" "topic-id" "text"] ["fn" ["e" "dispatch!"] ["dispatch!" ":message/create" ["[]" "topic-id" "text"]] ["mutate!" "|"]]], "comp.home/style-trigger" ["def" "style-trigger" ["{}" [":font-size" "14"] [":cursor" ":pointer"] [":background-color" "colors/motif-light"] [":color" ":white"] [":padding" "|0 8px"]]], "comp.room/comp-room" ["def" "comp-room" ["create-comp" ":room" "init-state" "update-state" "render"]], "comp.room/on-keydown" ["defn" "on-keydown" ["mutate!" "topic-id" "text"] ["fn" ["e" "dispatch!"] ["println" "e"] ["if" ["and" ["=" [":key-code" "e"] "13"] ["not" ["string/blank?" "text"]]] ["do" ["dispatch!" ":message/create" ["[]" "topic-id" "text"]] ["mutate!" "|"]]]]], "comp.login/on-submit" ["defn" "on-submit" ["username" "password" "signup?"] ["fn" ["e" "dispatch!"] ["dispatch!" ["if" "signup?" ":user/sign-up" ":user/log-in"] ["[]" "username" "password"]]]], "comp.container/render" ["defn" "render" ["store"] ["fn" ["state" "mutate!"] ["div" ["{}" [":style" ["merge" "ui/global" "ui/fullscreen" "ui/column"]]] ["div" ["{}" [":style" ["merge" "ui/row-center" "style-header"]]] ["div" ["{}"] ["comp-text" "|Workflow" "nil"]] ["div" ["{}" [":style" ["{}" [":cursor" "|pointer"]]] [":event" ["{}"]]] ["comp-text" "|Guest" "nil"]]] ["div" ["{}" [":style" "style-body"]] ["comp-home" "store"]] ["comp-debug" "store" ["{}" [":bottom" "0"] [":left" "0"] [":max-width" "|100%"]]] ["comp-msg-list" ["get-in" "store" ["[]" ":state" ":notifications"]] ":state/remove-notification"]]]], "comp.login/init-state" ["defn" "init-state" ["&" "args"] ["{}" [":signup?" "false"] [":username" "|"] [":password" "|"]]], "core/dispatch!" ["defn" "dispatch!" ["op" "op-data"] ["send!" "op" "op-data"]], "comp.room/init-state" ["defn" "init-state" ["&" "args"] "|"], "network/receiver" ["defonce" "receiver" ["chan"]], "comp.login/on-input" ["defn" "on-input" ["mutate!" "k"] ["fn" ["e" "dispatch!"] ["mutate!" "k" [":value" "e"]]]], "comp.container/style-header" ["def" "style-header" ["{}" [":height" "48"] [":background-color" "colors/motif"] [":justify-content" ":space-between"] [":padding" "|0 16px"] [":font-size" "16"] [":color" ":white"]]], "comp.container/comp-container" ["def" "comp-container" ["create-comp" ":container" "render"]], "comp.login/render" ["defn" "render" [] ["fn" ["state" "mutate!"] ["div" ["{}" [":style" ["merge" "ui/flex" "ui/column"]]] ["div" ["{}"] ["comp-text" ["if" [":signup?" "state"] "|Sign up" "|Log in"] "style-title"] ["if" [":signup?" "state"] ["div" ["{}"] ["comp-text" "|Want to log in?" "nil"] ["comp-space" "8" "nil"] ["div" ["{}" [":style" "ui/clickable-text"] [":event" ["{}" [":click" ["on-toggle" "mutate!" [":signup?" "state"]]]]]] ["comp-text" "|Log in" "nil"]]] ["div" ["{}"] ["comp-text" "|No account yet?" "nil"] ["comp-space" "8" "nil"] ["div" ["{}" [":style" "ui/clickable-text"] [":event" ["{}" [":click" ["on-toggle" "mutate!" [":signup?" "state"]]]]]] ["comp-text" "|Sign up" "nil"]]]]] ["div" ["{}" [":style" ["{}"]]] ["div" ["{}"] ["input" ["{}" [":style" "ui/input"] [":attrs" ["{}" [":placeholder" "|Username"] [":value" [":username" "state"]]]] [":event" ["{}" [":input" ["on-input" "mutate!" ":username"]]]]]]] ["comp-space" "nil" "8"] ["div" ["{}"] ["input" ["{}" [":style" "ui/input"] [":attrs" ["{}" [":placeholder" "|Password"] [":value" [":password" "state"]]]] [":event" ["{}" [":input" ["on-input" "mutate!" ":password"]]]]]]]] ["comp-space" "nil" "8"] ["div" ["{}" [":style" "ui/flex"]] ["button" ["{}" [":style" ["merge" "ui/button" ["{}" [":outline" ":none"] [":border" ":none"]]]] [":event" ["{}" [":click" ["on-submit" [":username" "state"] [":password" "state"] [":signup?" "state"]]]]]] ["comp-text" "|Submit" "nil"]]] ["--" "comp-debug" "state" "nil"]]]], "core/states-ref" ["defonce" "states-ref" ["atom" ["{}"]]], "comp.home/on-log-out" ["defn" "on-log-out" ["e" "dispatch!"] ["dispatch!" ":user/log-out" "nil"]], "network/sender" ["defonce" "sender" ["chan"]], "comp.container/style-body" ["def" "style-body" ["{}"]], "comp.login/comp-login" ["def" "comp-login" ["create-comp" ":login" "init-state" "update-state" "render"]], "comp.room/update-state" ["defn" "update-state" ["state" "text"] "text"], "comp.room/render" ["defn" "render" ["messages" "topic-id"] ["fn" ["state" "mutate!"] ["div" ["{}" [":style" ["merge" "ui/column" "ui/flex"]]] ["comp-text" "|Messages" "nil"] ["div" ["{}" [":style" "ui/flex"]] ["->>" ["vals" "messages"] ["map" ["fn" ["message"] ["[]" [":id" "message"] ["div" ["{}"] ["comp-text" [":text" "message"] "nil"]]]]]]] ["div" ["{}" [":style" "ui/row"]] ["input" ["{}" [":style" ["merge" "ui/input" "ui/flex"]] [":attrs" ["{}" [":placeholder" "|reply here..."] [":value" "state"]]] [":event" ["{}" [":input" ["on-input" "mutate!"]] [":keydown" ["on-keydown" "mutate!" "topic-id" "state"]]]]]] ["comp-space" "8" "nil"] ["button" ["{}" [":style" "ui/button"] [":event" ["{}" [":click" ["on-send" "mutate!" "topic-id" "state"]]]]] ["comp-text" "|Send" "nil"]]]]]], "comp.room/on-input" ["defn" "on-input" ["mutate!"] ["fn" ["e" "dispatch!"] ["mutate!" [":value" "e"]]]], "comp.home/style-container" ["def" "style-container" ["{}" [":padding" "|8px 16px"]]], "network/send!" ["defn" "send!" ["op" "op-data"] ["go" [">!" "sender" ["[]" "op" "op-data"]]]], "comp.home/render" ["defn" "render" ["store"] ["fn" ["state" "mutate!"] ["div" ["{}" [":style" ["merge" "ui/row" "style-container"]]] ["if" [":logged-in?" "store"] ["let" [["router" ["get-in" "store" ["[]" ":state" ":router"]]]] ["if" ["=" [":name" "router"] ":topic"] ["comp-room" [":seeing-messages" "store"] [":data" "router"]] ["div" ["{}" [":style" "ui/flex"]] ["comp-text" ["str" "|Hello! " ["get-in" "store" ["[]" ":user" ":name"]]] "nil"] ["comp-space" "8" "nil"] ["a" ["{}" [":style" "style-trigger"] [":event" ["{}" [":click" "on-log-out"]]]] ["comp-text" "|Log out" "nil"]]]]] ["comp-login"]]]]], "network/setup-socket!" ["defn" "setup-socket!" ["store-ref" "configs"] ["let" [["ws-url" [":url" "configs"]] ["ws" ["js/WebSocket." "ws-url"]] ["handle-close!" ["if" ["fn?" [":on-close!" "configs"]] [":on-close!" "configs"] "identity"]] ["handle-open!" ["if" ["fn?" [":on-open!" "configs"]] [":on-open!" "configs"] "identity"]]] ["set!" "ws.onopen" ["fn" ["event"] ["handle-open!" "event"]]] ["set!" "ws.onclose" ["fn" ["event"] ["handle-close!" "event"]]] ["set!" "ws.onmessage" ["fn" ["event"] ["let" [["changes" ["reader/read-string" "event.data"]]] ["println" "|Changes" "changes"] ["reset!" "store-ref" ["patch-bunch" "@store-ref" "changes"]]]]] ["go" ["loop" ["[]"] [".send" "ws" ["pr-str" ["<!" "sender"]]] ["recur"]]]]], "comp.login/style-title" ["def" "style-title" ["{}" [":font-size" "24"] [":font-weight" "300"] [":font-family" "|Josefin Sans"]]], "core/render-app!" ["defn" "render-app!" [] ["let" [["target" [".querySelector" "js/document" "|#app"]]] ["render!" ["comp-container" "@store-ref"] "target" "dispatch!" "states-ref"]]]}, :namespaces {"comp.room" ["ns" "workflow.comp.room" [":require" ["[]" "hsl.core" ":refer" ["[]" "hsl"]] ["[]" "clojure.string" ":as" "string"] ["[]" "respo-ui.style" ":as" "ui"] ["[]" "respo-ui.style.colors" ":as" "colors"] ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span" "input" "button"]] ["[]" "respo.comp.debug" ":refer" ["[]" "comp-debug"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-code" "comp-text"]] ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]]]], "comp.container" ["ns" "workflow.comp.container" [":require" ["[]" "hsl.core" ":refer" ["[]" "hsl"]] ["[]" "respo-ui.style" ":as" "ui"] ["[]" "respo-ui.style.colors" ":as" "colors"] ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span"]] ["[]" "respo.comp.debug" ":refer" ["[]" "comp-debug"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-code" "comp-text"]] ["[]" "workflow.comp.home" ":refer" ["[]" "comp-home"]] ["[]" "respo-message.comp.msg-list" ":refer" ["[]" "comp-msg-list"]]]], "network" ["ns" "workflow.network" [":require-macros" ["[]" "cljs.core.async.macros" ":refer" ["[]" "go"]]] [":require" ["[]" "cljs.reader" ":as" "reader"] ["[]" "cljs.core.async" ":as" "a" ":refer" ["[]" ">!" "<!" "chan" "timeout"]] ["[]" "recollect.patch" ":refer" ["[]" "patch-bunch"]]]], "comp.login" ["ns" "workflow.comp.login" [":require" ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "input" "button"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]] ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]] ["[]" "respo.comp.debug" ":refer" ["[]" "comp-debug"]] ["[]" "respo-ui.style" ":as" "ui"]]], "comp.home" ["ns" "workflow.comp.home" [":require" ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "a"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]] ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]] ["[]" "respo-ui.style" ":as" "ui"] ["[]" "respo-ui.style.colors" ":as" "colors"] ["[]" "workflow.comp.login" ":refer" ["[]" "comp-login"]] ["[]" "workflow.comp.room" ":refer" ["[]" "comp-room"]]]], "core" ["ns" "workflow.core" [":require" ["[]" "respo.core" ":refer" ["[]" "render!" "clear-cache!"]] ["[]" "workflow.comp.container" ":refer" ["[]" "comp-container"]] ["[]" "cljs.reader" ":refer" ["[]" "read-string"]] ["[]" "workflow.network" ":refer" ["[]" "send!" "setup-socket!"]]]]}, :procedures {"style.typeset" [], "comp.room" [], "style.devtool" [], "comp.container" [], "network" [], "comp.login" [], "comp.topics" [], "comp.home" [], "comp.topic" [], "core" [["set!" "js/window.onload" "-main"]], "style.layout" [], "style.widget" []}, :package "workflow", :procudures nil}