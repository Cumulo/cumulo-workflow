{:package "workflow", :definitions {"core/on-jsload" ["defn" "on-jsload" [] ["clear-cache!"] ["render-app!"] ["println" "|code updated."]], "core/-main" ["defn" "-main" [] ["enable-console-print!"] ["render-app!"] ["setup-socket!" "store-ref" ["{}" [":url" "|ws://repo:5020"] [":on-close!" ["fn" ["event"] [".error" "js/console" "|Lost connection!"]]]]] ["add-watch" "store-ref" ":changes" "render-app!"] ["add-watch" "states-ref" ":changes" "render-app!"] ["println" "|app started!"] ["let" [["configEl" [".querySelector" "js/document" "|#config"]] ["config" ["read-string" [".-innerHTML" "configEl"]]]] ["if" ["and" ["some?" "navigator.serviceWorker"] [":build?" "config"]] ["->" "navigator.serviceWorker" [".register" "|./sw.js"] [".then" ["fn" ["registration"] ["println" "|resigtered:" "registration.scope"]]] [".catch" ["fn" ["error"] ["println" "|failed:" "error"]]]]]]], "core/store-ref" ["defonce" "store-ref" ["atom" ["{}"]]], "comp.container/render" ["defn" "render" ["store"] ["fn" ["state" "mutate!"] ["div" ["{}" [":style" ["merge" "ui/fullscreen" "ui/row"]]] ["div" ["{}"] ["div" ["{}" [":style" "ui/button"] [":event" ["{}" [":click" ["fn" ["e" "dispatch!"] ["dispatch!" ":ping" "nil"]]]]]] ["comp-text" "|ping" "nil"]]] ["comp-debug" "store" ["{}" [":bottom" "0"] [":left" "0"] [":max-width" "|100%"]]]]]], "core/dispatch!" ["defn" "dispatch!" ["op" "op-data"] ["send!" "op" "op-data"]], "network/receiver" ["defonce" "receiver" ["chan"]], "comp.container/comp-container" ["def" "comp-container" ["create-comp" ":container" "render"]], "core/states-ref" ["defonce" "states-ref" ["atom" ["{}"]]], "network/sender" ["defonce" "sender" ["chan"]], "network/send!" ["defn" "send!" ["op" "op-data"] ["go" [">!" "sender" ["[]" "op" "op-data"]]]], "network/setup-socket!" ["defn" "setup-socket!" ["store-ref" "configs"] ["let" [["ws-url" [":url" "configs"]] ["ws" ["js/WebSocket." "ws-url"]] ["handle-close!" ["if" ["fn?" [":on-close!" "configs"]] [":on-close!" "configs"] "identity"]] ["handle-open!" ["if" ["fn?" [":on-open!" "configs"]] [":on-open!" "configs"] "identity"]]] ["set!" "ws.onopen" ["fn" ["event"] ["handle-open!" "event"]]] ["set!" "ws.onclose" ["fn" ["event"] ["handle-close!" "event"]]] ["set!" "ws.onmessage" ["fn" ["event"] ["let" [["changes" ["reader/read-string" "event.data"]]] ["println" "|Changes" "changes"] ["reset!" "store-ref" ["patch-bunch" "@store-ref" "changes"]]]]] ["go" ["loop" ["[]"] [".send" "ws" ["pr-str" ["<!" "sender"]]] ["recur"]]]]], "core/render-app!" ["defn" "render-app!" [] ["let" [["target" [".querySelector" "js/document" "|#app"]]] ["render!" ["comp-container" "@store-ref"] "target" "dispatch!" "states-ref"]]]}, :namespaces {"comp.container" ["ns" "workflow.comp.container" [":require" ["[]" "hsl.core" ":refer" ["[]" "hsl"]] ["[]" "respo-ui.style" ":as" "ui"] ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span"]] ["[]" "respo.comp.debug" ":refer" ["[]" "comp-debug"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]]]], "core" ["ns" "workflow.core" [":require" ["[]" "respo.core" ":refer" ["[]" "render!" "clear-cache!"]] ["[]" "workflow.comp.container" ":refer" ["[]" "comp-container"]] ["[]" "cljs.reader" ":refer" ["[]" "read-string"]] ["[]" "workflow.network" ":refer" ["[]" "send!" "setup-socket!"]]]], "network" ["ns" "workflow.network" [":require-macros" ["[]" "cljs.core.async.macros" ":refer" ["[]" "go"]]] [":require" ["[]" "cljs.reader" ":as" "reader"] ["[]" "cljs.core.async" ":as" "a" ":refer" ["[]" ">!" "<!" "chan" "timeout"]] ["[]" "recollect.patch" ":refer" ["[]" "patch-bunch"]]]]}, :main-definition nil, :procedures {"style.typeset" [], "style.devtool" [], "comp.container" [], "core" [["set!" "js/window.onload" "-main"]], "style.layout" [], "style.widget" [], "network" []}}